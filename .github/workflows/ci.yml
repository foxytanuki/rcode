name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 'stable'

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: latest
        args: --timeout=5m --skip-config-verify

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build server
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/rcode-server-linux-amd64 ./cmd/server
        GOOS=darwin GOARCH=amd64 go build -o bin/rcode-server-darwin-amd64 ./cmd/server
        GOOS=darwin GOARCH=arm64 go build -o bin/rcode-server-darwin-arm64 ./cmd/server

    - name: Build client
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/rcode-linux-amd64 ./cmd/rcode
        GOOS=darwin GOARCH=amd64 go build -o bin/rcode-darwin-amd64 ./cmd/rcode
        GOOS=darwin GOARCH=arm64 go build -o bin/rcode-darwin-arm64 ./cmd/rcode

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: bin/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker images
      run: |
        docker build -f Dockerfile.server -t rcode-server:latest .
        docker build -f Dockerfile.client -t rcode-client:latest .
